// Generated by CoffeeScript 1.6.3
'use strict';
angular.module('rottenListApp').factory('location', [
  '$location', '$route', '$rootScope', function($location, $route, $rootScope) {
    $location.skipReload = function() {
      var lastRoute, un;
      lastRoute = $route.current;
      un = $rootScope.$on('$locationChangeSuccess', function() {
        $route.current = lastRoute;
        return un();
      });
      return $location;
    };
    return $location;
  }
]).controller('MainCtrl', function($scope, $location, location) {
  var ids;
  $scope.separator = ",";
  $scope.apikey = "gbngrekn754krwuqf7ajaumr";
  $scope.movies = [];
  if ($location.search().movies) {
    ids = $scope.getUrlIds($location.search().movies);
    $.ajax("http://api.rottentomatoes.com/api/public/v1.0/movies/" + id + ".json", {
      data: {
        apikey: "gbngrekn754krwuqf7ajaumr"
      },
      dataType: "jsonp"
    }).done(function(data) {
      return callback(data);
    });
  }
  console.log($location.search());
  $scope.select2Options = {
    placeholder: "Search for a movie",
    minimumInputLength: 1,
    dropdownCssClass: "header-drop",
    ajax: {
      url: "http://api.rottentomatoes.com/api/public/v1.0/movies.json",
      dataType: 'jsonp',
      data: function(term, page) {
        return {
          q: term,
          page_limit: 10,
          apikey: $scope.apikey
        };
      },
      results: function(data, page) {
        return {
          results: data.movies
        };
      }
    },
    initSelection: function(element, callback) {
      var id;
      id = $(element).val();
      if (id !== "") {
        return $scope.fetchMovie(id, callback);
      }
    },
    formatResult: function(m) {
      return m.title;
    },
    formatSelection: function(m) {
      return m.title;
    },
    escapeMarkup: function(m) {
      return m;
    }
  };
  $scope.fetchMovie = function(id, callback) {
    return $.ajax("http://api.rottentomatoes.com/api/public/v1.0/movies/" + id + ".json", {
      data: {
        apikey: "gbngrekn754krwuqf7ajaumr"
      },
      dataType: "jsonp"
    }).done(function(data) {
      return callback(data);
    });
  };
  $scope.change = function(e) {
    var idsStr, movie;
    movie = $scope.select2;
    if ($location.search().movies) {
      ids = $scope.getUrlIds($location.search().movies);
      if (_.indexOf(ids, parseInt(movie.id)) === -1) {
        ids.push(parseInt(movie.id));
      }
      idsStr = ids.join(",");
    } else {
      idsStr = "" + movie.id;
    }
    $scope.movies.push(movie);
    location.skipReload().search({
      movies: idsStr
    });
    return console.log($scope.movies);
  };
  return $scope.getUrlIds = function(idsStr) {
    var splits;
    ids = [];
    splits = idsStr.split($scope.separator);
    _.each(splits, function(id) {
      return ids.push(parseInt(id));
    });
    return ids;
  };
});
